<====================== LINUX  NOTES ==========================>

For practising in linux ways:-
i)	Insatall linux OS 
ii)	Use oracle virtual box on chrome 
----------------------------------------------------------------------------------------------------------------------------------
iii)	Use aws ec2 instance ( connect local system to aws linux server using ssh client)
Go to ec2 service  AMI (linux )  instance type (t2.micro free tier) (750 hours free one month)    create key pair ( add name  type RSA  fomat .pem   click create key pair)   allow SSH traffic check the tickbox   LAUNCH INSTANCe

Note :- don’t forget to close ec2 

Downloaded .pes/key pair  file store it in folder and add in C/D drive 

Open git bash on that file

In instances of aws you should click connect using ssh and add 3rd  point(it will alter the file permissions in system) command and last point command in git bash .  

Type yes  yes next  now will connect to server



Linux commands :-

Note :- linux is opensource so everyone modifies it and launches their own OS 
For eg: - kali linux, aws linux,   redhat linux,…

Whoami  to see current user logged in 

Date 

Cal

Cal 2025

Pwd  --> current working directory

Mkdir  --> make directory 

Ls --> listing folders

Ls -r --> rev order

Ls -l --> (long listing) for detailed folder details in asc order 

Ls -lr --> In rev order

Ls -la --> will give all hidden folders as well

Rmdir “foldername” --> remove empty folder only 

Cd ~ --> to return to root folder 

Cd .. --> to take one folder back

Clear 

rmdir -rf "folder name"  ==> recursively forcabely remove folder even if content present in it

rm 'filename' ==> for deleting particular file

touch "filename"  ==> creates new file

4th video

---------------- MOVE OR RENAME --------------------------

mv ==> used to rename or move the file
mv 'old filename' 'new filename'  ==> rename
mv 'filename' 'full path'   ==> moving the file to another location

-------------   CREATE READ WRITE --------------------------

cat ==> used to create, write or read the file 

cat 'filename' --> display content
cat >  'filename'   & click ctrl +C  ==> will create new file
cat >> 'filename'  & start writing content & after finished writing click ctrl +C  ==> will help to write content inside file

cat -n 'filename'  ==> will display content with line no.s 

Note:- for duplicate filename, cat file will fully replace the old file and old content will be vanished whereas  
                    while using touch file wont gets fully replaced instead it will only change/update the time of creation

tac 'filename'  ==> will display content in rev order

--------------------- COPY CONTENTS --------------------------

cp 'old filename' 'new filename' ==> for copying files from one file to another file

cat 'filename1' 'filename2' > 'filename3'   ==> copying 2 files and merging it into single file

----------------------- HEAD TAIL -------------------------------

head 'filenam' --> prints first 10 lines 
head -(number) 'filename'         --> print only given no of lines 
head -n -(number) 'filename' 
  
tail 'filenaem' --> prints last 10 lines 

------------------- SEARCHING ----------------------------------------\

GREP ( Global Regular Expression) 

NOTE :-
-grep is case sensitive
-order of -i -n doesn't matter here
-you can use it at the end also it will work

grep 'search anything' 'filename'  --> it is case sensitive so will search only that much matching words

grep -i 'anything' 'filename'      --> for removing case sensitivity and searching

grep -i -n 'anything' 'filename'   --> for searching with line number as well

grep -i -n 'anything' 'filename' * --> for searching word/char in all files in current directory

grep -i -n -v 'anything' 'filename' --> for searching other than matching word/char // same as not operator (-v )

Q. If you want to saarch from only first 5 lines of one file if there are 100s of lines of code 
-->
head -5 'filename' | grep 'anything' -i -n    
Note:- above  | called as pipe 

----------------------WORD COUNT ------------------------------------------------

wc 'filename'     --> will give output in [lines] [words] [bytes/chars] filename

wc -l 'filename'  --> to fetch only lines

wc -w 'filename'  --> to fetch only words

wc -m 'filename'  --> to fetch only chars/bytes


==========================EDITOR =============================================

#### VI EDITOR ######

vi 'filename'  --> will create new file in editor (in linux notepad calle as editor)

for editing inside file press 'i' mode ==> INSERT mode
click esc for coming out of insert mode

:wq              --> for save and quit
:w               --> for only save
:q               --> Quit (if no changes were made)
:q!              --> Quit without saving 


###### SED EDITOR ####################

SED stands for Stream Editor.

-It is primarily used for text processing (substitution, deletion, printing, and insertion).
-Allows performing operations on files without opening them.
-A highly versatile and powerful command in Linux.

SED Operations

<========== Substitution ========>

Note :- use -i command for saving the file otherwise will make changes temporarily

1. Replace the first occurrence of the keyword hello with welcome:

sed 's/hello/welcome/' 'filename'

2. Replace the second occurrence of the keyword hello with welcome:

sed 's/hello/welcome/2' 'filename'

4. Replace all occurrences of the keyword hello with welcome:

sed 's/hello/welcome/g' 'filename'

5. Substitute and save changes directly into the original file:

sed -i 's/ho11.0/welcome/g' 'filename'

6. for adding/concat some content in 2nd line .

sed -i '2s/$/ dont welcome you/' 'filename'

for replacing whole 2nd line with given content.

sed -i '2c\This is my new second line' 'filename'

Note :- 2s 2c called as substitute and change command

<============ Deletion =============>

1. Delete the 1st line of a file:

sed -i '1d' 'filename'

2. Delete the fourth line of a file:

sed -i '4d' 'filename'

3. Delete the last line of a file:

sed -i '$d' 'filename'

4. Delete the content from 2nd to 6th line

sed -i '2,6d' 'filename'

5. Delete all the content from file

sed -i '1,$d' 'filename'

<===================INSERTION AND PRINTING THE DATA =================>

1.print data from line 2 to 6th line

sed -n '2,6p' 'filename'

2. insert new line in 2nd line add data to it 

sed '2i\hello world2' a.txt

Note:- use \ backslash here for adding 

3. add data to last line .

sed -i '$a\last line finisher3' a.txt  //$a stands for last line append



**********************************************************************************************************
************************ USER MANAGEMENT *****************************************************************
**********************************************************************************************************

Chapter 1: User Management

Linux is a multi-user operating system where multiple users can access a single machine and perform multitasking simultaneously.

Key Notes
The default user in Amazon Linux VM is ec2-user, which has sudo privileges.

When a user account is created, a home directory for the user is also created.

Examples:

ec2-user => /home/ec2-user

alice => /home/alice


User Management Commands ===============>

1. Create a user
sudo useradd 'username'

2.Set or update a password for a user
sudo passwd 'username'

3.Display all users
cat /etc/passwd

4.for searching particular user
grep 'username' /etc/passwd

5.Switch to a different user account
su 'username'

after switching pwd will show admin dir and we dont have permission for ls out there 
so change the directory by using command:-
cd ~  OR  cd /home/username

Note : exit command for logout of user and return to admin user i.e ec2-user

6. delete user

sudo userdel 'username'   //it deletes only username but not directory home/username

7. del user with their working directory

sudo userdel 'username' --remove

8. change/update the existing password for user.

sudo passwd 'username'    //same as 2nd command


Chapter 2: Working with User Groups ===================>

When a user is created, a corresponding group is automatically created with the same name. User groups help manage permissions efficiently.

Commands for Group Management

1.Display all groups
cat /etc/group  
Note :- there are already built in users in group and u will see permissions out there :- x:100

2.Create a group
sudo groupadd developers

3.Add a user to a group
sudo usermod -aG groupname username
















